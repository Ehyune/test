2025-03-21 10:06:15 [INFO] Server is running on port:3000
2025-03-21 10:06:15 [INFO]   _   _      _ _        __   __                      ____                         _ _ 
 | | | | ___| | | ___   \ \ / /__  _   _ _ __   __ _|  _ \ ___   ___  _ __   __ _| | |
 | |_| |/ _ \ | |/ _ \   \ V / _ \| | | | '_ \ / _` | |_) / _ \ / _ \| '_ \ / _` | | |
 |  _  |  __/ | | (_) |   | | (_) | |_| | | | | (_| |  __/ (_) | (_) | | | | (_| |_|_|
 |_| |_|\___|_|_|\___/    |_|\___/ \__,_|_| |_|\__, |_|   \___/ \___/|_| |_|\__, (_|_)
                                               |___/                        |___/     
2025-03-21 10:06:41 [INFO] Requested URL : /api/login/
2025-03-21 10:06:41 [INFO] x-api-key : YP
2025-03-21 10:06:41 [INFO] req id : jminzzang
2025-03-21 10:06:41 [INFO] req pw : 1111
2025-03-21 10:07:06 [INFO] Requested URL : /api/login/
2025-03-21 10:07:06 [INFO] x-api-key : YP
2025-03-21 10:07:06 [INFO] req id : jminzzang
2025-03-21 10:07:06 [INFO] req pw : 1111
2025-03-21 10:07:07 [INFO] Requested URL : /api/menu/?id=jminzzang
2025-03-21 10:07:07 [INFO] x-api-key : YP
2025-03-21 10:07:07 [INFO] start execute: SELECT A.USERID, P_MENUNAME, MENUNAME, P_MENUID, B.MENUID, NVL(SCREEN_ID, 'NOT') SCREEN_ID
                , MENU_FUN1||MENU_FUN2||MENU_FUN3||MENU_FUN4||MENU_FUN5||MENU_FUN6||MENU_FUN7||MENU_FUN8||MENU_FUN9 MENU_FUN
                    FROM ADM_USER_GRANTMENU A,   
                        ADM_MENU_CS B  
                  WHERE ( A.MENUID = B.MENUID ) 
                  AND  ( 
                          ( A.GRANTSTAT = '1' ) AND 
                          ( B.STATE = '1' ) AND  
                          ( B.MENU_DEPTH IN ('3')) AND   
                          ( A.USERID = :userid)
                      )    
                  ORDER BY MENUID DESC, MENU_SEQ DESC
2025-03-21 10:07:18 [INFO] Requested URL : /api/products/?year=2025
2025-03-21 10:07:18 [INFO] x-api-key : YP
2025-03-21 10:07:31 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:07:31 [INFO] start execute: SELECT X.YEAR, NAME_1, LNAME_1, MNAME_1, SNAME_1, LNAME_2, MNAME_2, SNAME_2
                , MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07, MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12
                FROM (SELECT A.YEAR, A.SCODE SCODE_1, B.SCODE SCODE_2, NAME NAME_1, A.LNAME LNAME_1
                      , B.LNAME LNAME_2, A.MNAME MNAME_1, B.MNAME MNAME_2, A.SNAME SNAME_1, B.SNAME SNAME_2 
                      , A.IDX IDX_1, B.IDX IDX_2 
                      FROM PLAN_PRODUCTS_CODE A
                      , PLAN_PRODUCTS_DIV_CODE B
                      ) X
                      , PLAN_PRODUCTS A
                WHERE X.YEAR = A.YEAR(+)
                AND X.SCODE_1 = A.SCODE_1(+)
                AND X.SCODE_2 = A.SCODE_2(+)
                AND X.YEAR = :year
                ORDER BY IDX_1, IDX_2
2025-03-21 10:07:56 [INFO] Requested URL : /api/products_dtl/?year=2025
2025-03-21 10:07:56 [INFO] x-api-key : YP
2025-03-21 10:08:00 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:08:00 [INFO] start execute: SELECT YEAR, NAME, LNAME, MNAME, SNAME, MEASURE
                , SUM(DECODE(SCODE, 'DA0101', MONTH_01, 0)) DA0101
                , SUM(DECODE(SCODE, 'DA0102', MONTH_01, 0)) DA0102
                , SUM(DECODE(SCODE, 'DA0103', MONTH_01, 0)) DA0103
                , SUM(DECODE(SCODE, 'DA0201', MONTH_01, 0)) DA0201
                , SUM(DECODE(SCODE, 'DA0202', MONTH_01, 0)) DA0202
                , SUM(DECODE(SCODE, 'DA0203', MONTH_01, 0)) DA0203
                , SUM(DECODE(SCODE, 'DA0301', MONTH_01, 0)) DA0301
                , SUM(DECODE(SCODE, 'DA0302', MONTH_01, 0)) DA0302
                , SUM(DECODE(SCODE, 'DA0303', MONTH_01, 0)) DA0303
                , SUM(DECODE(SCODE, 'DA0401', MONTH_01, 0)) DA0401
                , SUM(DECODE(SCODE, 'DA0402', MONTH_01, 0)) DA0402
                , SUM(DECODE(SCODE, 'DA0403', MONTH_01, 0)) DA0403
                , SUM(DECODE(SCODE, 'DA0501', MONTH_01, 0)) DA0501
                , SUM(DECODE(SCODE, 'DA0502', MONTH_01, 0)) DA0502
                , SUM(DECODE(SCODE, 'DA0503', MONTH_01, 0)) DA0503
                , SUM(DECODE(SCODE, 'DA0601', MONTH_01, 0)) DA0601
                , SUM(DECODE(SCODE, 'DA0602', MONTH_01, 0)) DA0602
                , SUM(DECODE(SCODE, 'DA0603', MONTH_01, 0)) DA0603
                , SUM(DECODE(SCODE, 'DA0701', MONTH_01, 0)) DA0701
                , SUM(DECODE(SCODE, 'DA0702', MONTH_01, 0)) DA0702
                , SUM(DECODE(SCODE, 'DA0703', MONTH_01, 0)) DA0703
                , SUM(DECODE(SCODE, 'DA0801', MONTH_01, 0)) DA0801
                , SUM(DECODE(SCODE, 'DA0802', MONTH_01, 0)) DA0802
                , SUM(DECODE(SCODE, 'DA0803', MONTH_01, 0)) DA0803
                , SUM(DECODE(SCODE, 'DA0901', MONTH_01, 0)) DA0901
                , SUM(DECODE(SCODE, 'DA0902', MONTH_01, 0)) DA0902
                , SUM(DECODE(SCODE, 'DA0903', MONTH_01, 0)) DA0903
                , SUM(DECODE(SCODE, 'DA1001', MONTH_01, 0)) DA1001
                , SUM(DECODE(SCODE, 'DA1002', MONTH_01, 0)) DA1002
                , SUM(DECODE(SCODE, 'DA1003', MONTH_01, 0)) DA1003
                , SUM(DECODE(SCODE, 'DA1101', MONTH_01, 0)) DA1101
                , SUM(DECODE(SCODE, 'DA1102', MONTH_01, 0)) DA1102
                , SUM(DECODE(SCODE, 'DA1103', MONTH_01, 0)) DA1103
                , SUM(DECODE(SCODE, 'DA1201', MONTH_01, 0)) DA1201
                , SUM(DECODE(SCODE, 'DA1202', MONTH_01, 0)) DA1202
                , SUM(DECODE(SCODE, 'DA1203', MONTH_01, 0)) DA1203
                , SUM(DECODE(SCODE, 'DA1301', MONTH_01, 0)) DA1301
                , SUM(DECODE(SCODE, 'DA1302', MONTH_01, 0)) DA1302
                , SUM(DECODE(SCODE, 'DA1303', MONTH_01, 0)) DA1303
                , SUM(DECODE(SCODE, 'DA1401', MONTH_01, 0)) DA1401
                , SUM(DECODE(SCODE, 'DA1402', MONTH_01, 0)) DA1402
                , SUM(DECODE(SCODE, 'DA1403', MONTH_01, 0)) DA1403
                , SUM(DECODE(SCODE, 'DA1501', MONTH_01, 0)) DA1501
                , SUM(DECODE(SCODE, 'DA1502', MONTH_01, 0)) DA1502
                , SUM(DECODE(SCODE, 'DA1503', MONTH_01, 0)) DA1503
                , SUM(DECODE(SCODE, 'DA1601', MONTH_01, 0)) DA1601
                , SUM(DECODE(SCODE, 'DA1602', MONTH_01, 0)) DA1602
                , SUM(DECODE(SCODE, 'DA1603', MONTH_01, 0)) DA1603
                , SUM(DECODE(SCODE, 'DA1701', MONTH_01, 0)) DA1701
                , SUM(DECODE(SCODE, 'DA1702', MONTH_01, 0)) DA1702
                , SUM(DECODE(SCODE, 'DA1703', MONTH_01, 0)) DA1703
                , SUM(DECODE(SCODE, 'DA1801', MONTH_01, 0)) DA1801
                , SUM(DECODE(SCODE, 'DA1802', MONTH_01, 0)) DA1802
                , SUM(DECODE(SCODE, 'DA1803', MONTH_01, 0)) DA1803
                , SUM(DECODE(SCODE, 'DA1901', MONTH_01, 0)) DA1901
                , SUM(DECODE(SCODE, 'DA1902', MONTH_01, 0)) DA1902
                , SUM(DECODE(SCODE, 'DA1903', MONTH_01, 0)) DA1903
                , SUM(DECODE(SCODE, 'DA2001', MONTH_01, 0)) DA2001
                , SUM(DECODE(SCODE, 'DA2002', MONTH_01, 0)) DA2002
                , SUM(DECODE(SCODE, 'DA2003', MONTH_01, 0)) DA2003
                , SUM(DECODE(SCODE, 'DB0101', MONTH_01, 0)) DB0101
                , SUM(DECODE(SCODE, 'DB0102', MONTH_01, 0)) DB0102
                , SUM(DECODE(SCODE, 'DB0103', MONTH_01, 0)) DB0103
                , SUM(DECODE(SCODE, 'DC0101', MONTH_01, 0)) DC0101
                , SUM(DECODE(SCODE, 'DC0102', MONTH_01, 0)) DC0102
                , SUM(DECODE(SCODE, 'DC0103', MONTH_01, 0)) DC0103
                , SUM(DECODE(SCODE, 'DC0201', MONTH_01, 0)) DC0201
                , SUM(DECODE(SCODE, 'DC0202', MONTH_01, 0)) DC0202
                , SUM(DECODE(SCODE, 'DC0203', MONTH_01, 0)) DC0203
                , SUM(DECODE(SCODE, 'DC0301', MONTH_01, 0)) DC0301
                , SUM(DECODE(SCODE, 'DC0302', MONTH_01, 0)) DC0302
                , SUM(DECODE(SCODE, 'DC0303', MONTH_01, 0)) DC0303
                , SUM(DECODE(SCODE, 'DD0101', MONTH_01, 0)) DD0101
                , SUM(DECODE(SCODE, 'DD0102', MONTH_01, 0)) DD0102
                , SUM(DECODE(SCODE, 'DD0103', MONTH_01, 0)) DD0103
                FROM (
                    SELECT X.YEAR, X.NAME, X.LNAME, X.MNAME, X.SNAME, X.MEASURE, P.SCODE, P.SNAME P_SNAME, A.SCODE_1 , A.SCODE_2 
                    , A.MONTH_01, A.MONTH_02, A.MONTH_03, A.MONTH_04, A.MONTH_05, A.MONTH_06
                    , A.MONTH_07, A.MONTH_08, A.MONTH_09, A.MONTH_10, A.MONTH_11, A.MONTH_12, X.IDX 
                    FROM PLAN_PRODUCTS_CODE X, PLAN_PRODUCTS A, PLAN_PRODUCTS_DIV_CODE P
                    WHERE X.SCODE = A.SCODE_1(+)
                    AND X.YEAR = A.YEAR(+)
                    AND A.SCODE_2 = P.SCODE
                    AND A.YEAR = P.YEAR
                    AND A.YEAR = :year
                    ORDER BY X.IDX, P.IDX
                    )
                GROUP BY YEAR, NAME, LNAME, MNAME, SNAME, MEASURE, IDX    
                ORDER BY IDX
2025-03-21 10:08:53 [INFO] Requested URL : /api/login/
2025-03-21 10:08:53 [INFO] x-api-key : YP
2025-03-21 10:08:53 [INFO] req id : jminzzang
2025-03-21 10:08:53 [INFO] req pw : 1111
2025-03-21 10:08:53 [INFO] Requested URL : /api/menu/?id=jminzzang
2025-03-21 10:08:53 [INFO] x-api-key : YP
2025-03-21 10:08:53 [INFO] start execute: SELECT A.USERID, P_MENUNAME, MENUNAME, P_MENUID, B.MENUID, NVL(SCREEN_ID, 'NOT') SCREEN_ID
                , MENU_FUN1||MENU_FUN2||MENU_FUN3||MENU_FUN4||MENU_FUN5||MENU_FUN6||MENU_FUN7||MENU_FUN8||MENU_FUN9 MENU_FUN
                    FROM ADM_USER_GRANTMENU A,   
                        ADM_MENU_CS B  
                  WHERE ( A.MENUID = B.MENUID ) 
                  AND  ( 
                          ( A.GRANTSTAT = '1' ) AND 
                          ( B.STATE = '1' ) AND  
                          ( B.MENU_DEPTH IN ('3')) AND   
                          ( A.USERID = :userid)
                      )    
                  ORDER BY MENUID DESC, MENU_SEQ DESC
2025-03-21 10:08:58 [INFO] Requested URL : /api/products/?year=2025
2025-03-21 10:08:58 [INFO] x-api-key : YP
2025-03-21 10:09:00 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:09:00 [INFO] start execute: SELECT X.YEAR, NAME_1, LNAME_1, MNAME_1, SNAME_1, LNAME_2, MNAME_2, SNAME_2
                , MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07, MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12
                FROM (SELECT A.YEAR, A.SCODE SCODE_1, B.SCODE SCODE_2, NAME NAME_1, A.LNAME LNAME_1
                      , B.LNAME LNAME_2, A.MNAME MNAME_1, B.MNAME MNAME_2, A.SNAME SNAME_1, B.SNAME SNAME_2 
                      , A.IDX IDX_1, B.IDX IDX_2 
                      FROM PLAN_PRODUCTS_CODE A
                      , PLAN_PRODUCTS_DIV_CODE B
                      ) X
                      , PLAN_PRODUCTS A
                WHERE X.YEAR = A.YEAR(+)
                AND X.SCODE_1 = A.SCODE_1(+)
                AND X.SCODE_2 = A.SCODE_2(+)
                AND X.YEAR = :year
                ORDER BY IDX_1, IDX_2
2025-03-21 10:09:21 [INFO] Requested URL : /api/products_dtl/?year=2025
2025-03-21 10:09:21 [INFO] x-api-key : YP
2025-03-21 10:09:22 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:09:23 [INFO] start execute: SELECT YEAR, NAME, LNAME, MNAME, SNAME, MEASURE
                , SUM(DECODE(SCODE, 'DA0101', MONTH_01, 0)) DA0101
                , SUM(DECODE(SCODE, 'DA0102', MONTH_01, 0)) DA0102
                , SUM(DECODE(SCODE, 'DA0103', MONTH_01, 0)) DA0103
                , SUM(DECODE(SCODE, 'DA0201', MONTH_01, 0)) DA0201
                , SUM(DECODE(SCODE, 'DA0202', MONTH_01, 0)) DA0202
                , SUM(DECODE(SCODE, 'DA0203', MONTH_01, 0)) DA0203
                , SUM(DECODE(SCODE, 'DA0301', MONTH_01, 0)) DA0301
                , SUM(DECODE(SCODE, 'DA0302', MONTH_01, 0)) DA0302
                , SUM(DECODE(SCODE, 'DA0303', MONTH_01, 0)) DA0303
                , SUM(DECODE(SCODE, 'DA0401', MONTH_01, 0)) DA0401
                , SUM(DECODE(SCODE, 'DA0402', MONTH_01, 0)) DA0402
                , SUM(DECODE(SCODE, 'DA0403', MONTH_01, 0)) DA0403
                , SUM(DECODE(SCODE, 'DA0501', MONTH_01, 0)) DA0501
                , SUM(DECODE(SCODE, 'DA0502', MONTH_01, 0)) DA0502
                , SUM(DECODE(SCODE, 'DA0503', MONTH_01, 0)) DA0503
                , SUM(DECODE(SCODE, 'DA0601', MONTH_01, 0)) DA0601
                , SUM(DECODE(SCODE, 'DA0602', MONTH_01, 0)) DA0602
                , SUM(DECODE(SCODE, 'DA0603', MONTH_01, 0)) DA0603
                , SUM(DECODE(SCODE, 'DA0701', MONTH_01, 0)) DA0701
                , SUM(DECODE(SCODE, 'DA0702', MONTH_01, 0)) DA0702
                , SUM(DECODE(SCODE, 'DA0703', MONTH_01, 0)) DA0703
                , SUM(DECODE(SCODE, 'DA0801', MONTH_01, 0)) DA0801
                , SUM(DECODE(SCODE, 'DA0802', MONTH_01, 0)) DA0802
                , SUM(DECODE(SCODE, 'DA0803', MONTH_01, 0)) DA0803
                , SUM(DECODE(SCODE, 'DA0901', MONTH_01, 0)) DA0901
                , SUM(DECODE(SCODE, 'DA0902', MONTH_01, 0)) DA0902
                , SUM(DECODE(SCODE, 'DA0903', MONTH_01, 0)) DA0903
                , SUM(DECODE(SCODE, 'DA1001', MONTH_01, 0)) DA1001
                , SUM(DECODE(SCODE, 'DA1002', MONTH_01, 0)) DA1002
                , SUM(DECODE(SCODE, 'DA1003', MONTH_01, 0)) DA1003
                , SUM(DECODE(SCODE, 'DA1101', MONTH_01, 0)) DA1101
                , SUM(DECODE(SCODE, 'DA1102', MONTH_01, 0)) DA1102
                , SUM(DECODE(SCODE, 'DA1103', MONTH_01, 0)) DA1103
                , SUM(DECODE(SCODE, 'DA1201', MONTH_01, 0)) DA1201
                , SUM(DECODE(SCODE, 'DA1202', MONTH_01, 0)) DA1202
                , SUM(DECODE(SCODE, 'DA1203', MONTH_01, 0)) DA1203
                , SUM(DECODE(SCODE, 'DA1301', MONTH_01, 0)) DA1301
                , SUM(DECODE(SCODE, 'DA1302', MONTH_01, 0)) DA1302
                , SUM(DECODE(SCODE, 'DA1303', MONTH_01, 0)) DA1303
                , SUM(DECODE(SCODE, 'DA1401', MONTH_01, 0)) DA1401
                , SUM(DECODE(SCODE, 'DA1402', MONTH_01, 0)) DA1402
                , SUM(DECODE(SCODE, 'DA1403', MONTH_01, 0)) DA1403
                , SUM(DECODE(SCODE, 'DA1501', MONTH_01, 0)) DA1501
                , SUM(DECODE(SCODE, 'DA1502', MONTH_01, 0)) DA1502
                , SUM(DECODE(SCODE, 'DA1503', MONTH_01, 0)) DA1503
                , SUM(DECODE(SCODE, 'DA1601', MONTH_01, 0)) DA1601
                , SUM(DECODE(SCODE, 'DA1602', MONTH_01, 0)) DA1602
                , SUM(DECODE(SCODE, 'DA1603', MONTH_01, 0)) DA1603
                , SUM(DECODE(SCODE, 'DA1701', MONTH_01, 0)) DA1701
                , SUM(DECODE(SCODE, 'DA1702', MONTH_01, 0)) DA1702
                , SUM(DECODE(SCODE, 'DA1703', MONTH_01, 0)) DA1703
                , SUM(DECODE(SCODE, 'DA1801', MONTH_01, 0)) DA1801
                , SUM(DECODE(SCODE, 'DA1802', MONTH_01, 0)) DA1802
                , SUM(DECODE(SCODE, 'DA1803', MONTH_01, 0)) DA1803
                , SUM(DECODE(SCODE, 'DA1901', MONTH_01, 0)) DA1901
                , SUM(DECODE(SCODE, 'DA1902', MONTH_01, 0)) DA1902
                , SUM(DECODE(SCODE, 'DA1903', MONTH_01, 0)) DA1903
                , SUM(DECODE(SCODE, 'DA2001', MONTH_01, 0)) DA2001
                , SUM(DECODE(SCODE, 'DA2002', MONTH_01, 0)) DA2002
                , SUM(DECODE(SCODE, 'DA2003', MONTH_01, 0)) DA2003
                , SUM(DECODE(SCODE, 'DB0101', MONTH_01, 0)) DB0101
                , SUM(DECODE(SCODE, 'DB0102', MONTH_01, 0)) DB0102
                , SUM(DECODE(SCODE, 'DB0103', MONTH_01, 0)) DB0103
                , SUM(DECODE(SCODE, 'DC0101', MONTH_01, 0)) DC0101
                , SUM(DECODE(SCODE, 'DC0102', MONTH_01, 0)) DC0102
                , SUM(DECODE(SCODE, 'DC0103', MONTH_01, 0)) DC0103
                , SUM(DECODE(SCODE, 'DC0201', MONTH_01, 0)) DC0201
                , SUM(DECODE(SCODE, 'DC0202', MONTH_01, 0)) DC0202
                , SUM(DECODE(SCODE, 'DC0203', MONTH_01, 0)) DC0203
                , SUM(DECODE(SCODE, 'DC0301', MONTH_01, 0)) DC0301
                , SUM(DECODE(SCODE, 'DC0302', MONTH_01, 0)) DC0302
                , SUM(DECODE(SCODE, 'DC0303', MONTH_01, 0)) DC0303
                , SUM(DECODE(SCODE, 'DD0101', MONTH_01, 0)) DD0101
                , SUM(DECODE(SCODE, 'DD0102', MONTH_01, 0)) DD0102
                , SUM(DECODE(SCODE, 'DD0103', MONTH_01, 0)) DD0103
                FROM (
                    SELECT X.YEAR, X.NAME, X.LNAME, X.MNAME, X.SNAME, X.MEASURE, P.SCODE, P.SNAME P_SNAME, A.SCODE_1 , A.SCODE_2 
                    , A.MONTH_01, A.MONTH_02, A.MONTH_03, A.MONTH_04, A.MONTH_05, A.MONTH_06
                    , A.MONTH_07, A.MONTH_08, A.MONTH_09, A.MONTH_10, A.MONTH_11, A.MONTH_12, X.IDX 
                    FROM PLAN_PRODUCTS_CODE X, PLAN_PRODUCTS A, PLAN_PRODUCTS_DIV_CODE P
                    WHERE X.SCODE = A.SCODE_1(+)
                    AND X.YEAR = A.YEAR(+)
                    AND A.SCODE_2 = P.SCODE
                    AND A.YEAR = P.YEAR
                    AND A.YEAR = :year
                    ORDER BY X.IDX, P.IDX
                    )
                GROUP BY YEAR, NAME, LNAME, MNAME, SNAME, MEASURE, IDX    
                ORDER BY IDX
2025-03-21 10:09:28 [INFO] Requested URL : /api/ref1/?year=2025
2025-03-21 10:09:28 [INFO] x-api-key : YP
2025-03-21 10:09:28 [INFO] start execute: SELECT NUM, XA, XB, XC, GUBUN1, XD, XE, XF
              , CASE WHEN GUBUN1 = '0' THEN ROUND((XD + XE + XF)/3, 2)
                      WHEN GUBUN1 = '1' THEN ROUND(XD + XE + XF, 2)
                      ELSE 0
                      END AS XG 
              , XH, XI, XJ        
              , CASE WHEN GUBUN1 = '0' THEN ROUND((XH + XI + XJ)/3, 2)
                      WHEN GUBUN1 = '1' THEN ROUND(XH + XI + XJ, 2)
                      ELSE 0
                      END AS XK  
              , XL, XM, XN        
              , CASE WHEN GUBUN1 = '0' THEN ROUND((XL + XM + XN)/3, 2)
                      WHEN GUBUN1 = '1' THEN ROUND(XL + XM + XN, 2)
                      ELSE 0
                      END AS XO 
              , XP, XQ, XR        
              , CASE WHEN GUBUN1 = '0' THEN ROUND((XP + XQ + XR)/3, 2)
                      WHEN GUBUN1 = '1' THEN ROUND(XP + XQ + XR, 2)
                      ELSE 0
                      END AS XS                          
              FROM (        
                  SELECT A.NUM, A.XA, A.XB, A.XC, GUBUN1
                  , FN_REF_CAL(A.XB, A.YEAR, '01', A.AUTO_YN, ROUND(XD, 2)) XD
                  , FN_REF_CAL(A.XB, A.YEAR, '02', A.AUTO_YN, ROUND(XE, 2)) XE
                  , FN_REF_CAL(A.XB, A.YEAR, '03', A.AUTO_YN, ROUND(XF, 2)) XF                     
                  , FN_REF_CAL(A.XB, A.YEAR, '04', A.AUTO_YN, ROUND(XH, 2)) XH
                  , FN_REF_CAL(A.XB, A.YEAR, '05', A.AUTO_YN, ROUND(XI, 2)) XI
                  , FN_REF_CAL(A.XB, A.YEAR, '06', A.AUTO_YN, ROUND(XJ, 2)) XJ                  
                  , FN_REF_CAL(A.XB, A.YEAR, '07', A.AUTO_YN, ROUND(XL, 2)) XL
                  , FN_REF_CAL(A.XB, A.YEAR, '08', A.AUTO_YN, ROUND(XM, 2)) XM
                  , FN_REF_CAL(A.XB, A.YEAR, '09', A.AUTO_YN, ROUND(XN, 2)) XN                   
                  , FN_REF_CAL(A.XB, A.YEAR, '10', A.AUTO_YN, ROUND(XP, 2)) XP
                  , FN_REF_CAL(A.XB, A.YEAR, '11', A.AUTO_YN, ROUND(XQ, 2)) XQ
                  , FN_REF_CAL(A.XB, A.YEAR, '12', A.AUTO_YN, ROUND(XR, 2)) XR                             
                  FROM PLAN_REF_AUTO_CODE A, PLUG B
                  WHERE A.XB = B.XB(+)
                  AND A.YEAR = B.YEAR(+)
                  AND A.YEAR = :year
                  AND A.USE_YN = 'Y'
              )    
              ORDER BY NUM
2025-03-21 10:09:31 [INFO] Requested URL : /api/ref2/?year=2025
2025-03-21 10:09:31 [INFO] x-api-key : YP
2025-03-21 10:09:31 [INFO] req data : {
  "returncode": "9999"
}
2025-03-21 10:09:31 [INFO] start execute: SELECT A.NUM, A.XA, A.XB, A.XC
              , B.MONTH_01, B.MONTH_02, B.MONTH_03, B.MONTH_01 + B.MONTH_02 + B.MONTH_03 MONTH_1
              , B.MONTH_04, B.MONTH_05, B.MONTH_06, B.MONTH_04 + B.MONTH_05 + B.MONTH_06 MONTH_2
              , B.MONTH_07, B.MONTH_08, B.MONTH_09, B.MONTH_07 + B.MONTH_08 + B.MONTH_09 MONTH_3
              , B.MONTH_10, B.MONTH_11, B.MONTH_12, B.MONTH_10 + B.MONTH_11 + B.MONTH_12 MONTH_4
              FROM PLAN_REF_MANUAL_CODE A, PLAN_REF_MANUAL B
              WHERE A.XB = B.NAME(+)
              AND A.YEAR = B.YEAR(+)
              AND A.YEAR = :year
              AND A.USE_YN = 'Y'
              ORDER BY A.NUM
2025-03-21 10:09:51 [INFO] Requested URL : /api/refindicator/?year=2025
2025-03-21 10:09:51 [INFO] x-api-key : YP
2025-03-21 10:09:51 [INFO] start execute: SELECT YEAR, GUBUN1, GUBUN2, MEASURE, ANNUAL, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05 
                , MONTH_06, MONTH_07, MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12, BIGO, USE_YN
                  FROM PLAN_REF_INDICATOR
                  WHERE YEAR = :year
                  AND USE_YN = 'Y'
                  ORDER BY IDX
2025-03-21 10:10:00 [INFO] Requested URL : /api/zincconcentrate/?year=2025
2025-03-21 10:10:00 [INFO] x-api-key : YP
2025-03-21 10:10:01 [INFO] start execute: SELECT DECODE(GUBUN, '1', '수입', '0', '국내', '기타') GUBUN, X.YEAR, SNAME, IDX
                , SUM(DECODE(MONTH, '01', CNT, 0)) CNT_01
                , SUM(DECODE(MONTH, '01', UNIT_COST, 0)) UNIT_COST_01
                , SUM(DECODE(MONTH, '01', AMT, 0)) AMT_01
                , SUM(DECODE(MONTH, '02', CNT, 0)) CNT_02
                , SUM(DECODE(MONTH, '02', UNIT_COST, 0)) UNIT_COST_02
                , SUM(DECODE(MONTH, '02', AMT, 0)) AMT_02
                , SUM(DECODE(MONTH, '03', CNT, 0)) CNT_03
                , SUM(DECODE(MONTH, '03', UNIT_COST, 0)) UNIT_COST_03
                , SUM(DECODE(MONTH, '03', AMT, 0)) AMT_03
                , SUM(DECODE(MONTH, '04', CNT, 0)) CNT_04
                , SUM(DECODE(MONTH, '04', UNIT_COST, 0)) UNIT_COST_04
                , SUM(DECODE(MONTH, '04', AMT, 0)) AMT_04
                , SUM(DECODE(MONTH, '05', CNT, 0)) CNT_05
                , SUM(DECODE(MONTH, '05', UNIT_COST, 0)) UNIT_COST_05
                , SUM(DECODE(MONTH, '05', AMT, 0)) AMT_05
                , SUM(DECODE(MONTH, '06', CNT, 0)) CNT_06
                , SUM(DECODE(MONTH, '06', UNIT_COST, 0)) UNIT_COST_06
                , SUM(DECODE(MONTH, '06', AMT, 0)) AMT_06
                , SUM(DECODE(MONTH, '07', CNT, 0)) CNT_07
                , SUM(DECODE(MONTH, '07', UNIT_COST, 0)) UNIT_COST_07
                , SUM(DECODE(MONTH, '07', AMT, 0)) AMT_07
                , SUM(DECODE(MONTH, '08', CNT, 0)) CNT_08
                , SUM(DECODE(MONTH, '08', UNIT_COST, 0)) UNIT_COST_08
                , SUM(DECODE(MONTH, '08', AMT, 0)) AMT_08
                , SUM(DECODE(MONTH, '09', CNT, 0)) CNT_09
                , SUM(DECODE(MONTH, '09', UNIT_COST, 0)) UNIT_COST_09
                , SUM(DECODE(MONTH, '09', AMT, 0)) AMT_09
                , SUM(DECODE(MONTH, '10', CNT, 0)) CNT_10
                , SUM(DECODE(MONTH, '10', UNIT_COST, 0)) UNIT_COST_10
                , SUM(DECODE(MONTH, '10', AMT, 0)) AMT_10
                , SUM(DECODE(MONTH, '11', CNT, 0)) CNT_11
                , SUM(DECODE(MONTH, '11', UNIT_COST, 0)) UNIT_COST_11
                , SUM(DECODE(MONTH, '11', AMT, 0)) AMT_11
                , SUM(DECODE(MONTH, '12', CNT, 0)) CNT_12
                , SUM(DECODE(MONTH, '12', UNIT_COST, 0)) UNIT_COST_12
                , SUM(DECODE(MONTH, '12', AMT, 0)) AMT_12
                FROM (SELECT * FROM PLAN_ZINC_CONCENTRATE_CODE WHERE YEAR = :year) X
                , (SELECT * FROM PLAN_ZINC_CONCENTRATE WHERE YEAR = :year) A
                WHERE X.SNAME = A.NAME(+)
                GROUP BY GUBUN, X.YEAR, SNAME, IDX
                ORDER BY X.YEAR, IDX
2025-03-21 10:10:09 [INFO] Requested URL : /api/zincconcentratemanual/?year=2025
2025-03-21 10:10:09 [INFO] x-api-key : YP
2025-03-21 10:10:09 [INFO] start execute: SELECT YEAR, GUBUN, MEASURE, XA, XB, XC
                  FROM PLAN_ZINC_CONCENTRATE_MANUAL
                  WHERE YEAR = :year
                  ORDER BY IDX
2025-03-21 10:10:09 [INFO] Requested URL : /api/zincconcentrateunitcost/?year=2025
2025-03-21 10:10:09 [INFO] x-api-key : YP
2025-03-21 10:10:09 [INFO] start execute: SELECT YEAR, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06
                , MONTH_07, MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12
                , COST_01, COST_02, COST_03, COST_04, COST_05, COST_06
                , COST_07, COST_08, COST_09, COST_10, COST_11, COST_12
                FROM PLAN_ZINC_CONCENTRATE_UNIT_COST A
                WHERE YEAR = :year
2025-03-21 10:10:42 [INFO] Requested URL : /api/ref2/?year=2025
2025-03-21 10:10:42 [INFO] x-api-key : YP
2025-03-21 10:10:42 [INFO] req data : {
  "returncode": "9999"
}
2025-03-21 10:10:42 [INFO] start execute: SELECT A.NUM, A.XA, A.XB, A.XC
              , B.MONTH_01, B.MONTH_02, B.MONTH_03, B.MONTH_01 + B.MONTH_02 + B.MONTH_03 MONTH_1
              , B.MONTH_04, B.MONTH_05, B.MONTH_06, B.MONTH_04 + B.MONTH_05 + B.MONTH_06 MONTH_2
              , B.MONTH_07, B.MONTH_08, B.MONTH_09, B.MONTH_07 + B.MONTH_08 + B.MONTH_09 MONTH_3
              , B.MONTH_10, B.MONTH_11, B.MONTH_12, B.MONTH_10 + B.MONTH_11 + B.MONTH_12 MONTH_4
              FROM PLAN_REF_MANUAL_CODE A, PLAN_REF_MANUAL B
              WHERE A.XB = B.NAME(+)
              AND A.YEAR = B.YEAR(+)
              AND A.YEAR = :year
              AND A.USE_YN = 'Y'
              ORDER BY A.NUM
2025-03-21 10:11:34 [INFO] Requested URL : /api/otherexpensest/?year=2025&gubun=0
2025-03-21 10:11:34 [INFO] x-api-key : YP
2025-03-21 10:11:34 [INFO] start execute: SELECT GUBUN, YEAR, '' MONTH, SNAME NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG, SUM(XH) XH, SUM(XI) XI, SUM(XJ) XJ     
                    , SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, SUM(XO) XO, SUM(XP) XP, SUM(XQ) XQ, SUM(XR) XR, SUM(XS) XS, SUM(XT) XT, SUM(XU) XU, SUM(XV) XV, SUM(XW) XW, SUM(XX) XX
                    , SUM(XY) XY, SUM(XZ) XZ, SUM(XAA) XAA, IDX
                FROM (SELECT DISTINCT A.GUBUN, A.YEAR, A.MONTH, SNAME, A.XA*B.XA XA, A.XB*B.XB XB, A.XC*B.XC XC
                , A.XD*B.XD XD, A.XE*B.XE XE, A.XF*B.XF XF, A.XG*B.XG XG, A.XH*B.XH XH, A.XI*B.XI XI
                , A.XJ*B.XJ XJ, A.XK*B.XK XK, A.XL*B.XL XL, A.XM*B.XM XM, A.XN*B.XN XN, A.XO*B.XO XO
                , A.XP*B.XP XP, A.XQ*B.XQ XQ, A.XR*B.XR XR, A.XS*B.XS XS, A.XT*B.XT XT, A.XU*B.XU XU
                , A.XV*B.XV XV, A.XW*B.XW XW, A.XX*B.XX XX, A.XY*B.XY XY, A.XZ*B.XZ XZ, A.XAA*B.XAA XAA, X.IDX
                    FROM (SELECT SCODE, SNAME, IDX FROM PLAN_OTHER_EXPENSES_CODE WHERE YEAR = :year) X
                    , (SELECT * FROM PLAN_OTHER_EXPENSES WHERE GUBUN = '1') A
                    , (SELECT * FROM PLAN_OTHER_EXPENSES WHERE GUBUN = '2') B
                    WHERE X.SNAME = A.NAME(+)
                    AND X.SNAME = B.NAME(+)
                    AND A.YEAR = B.YEAR
                    AND A.MONTH = B.MONTH
                    AND A.NAME = B.NAME
                    AND A.YEAR = :year)
                GROUP BY GUBUN, YEAR, SNAME, IDX    
                ORDER BY YEAR, MONTH, IDX
2025-03-21 10:11:37 [INFO] Requested URL : /api/submaterialt/?year=2025&gubun=0
2025-03-21 10:11:37 [INFO] x-api-key : YP
2025-03-21 10:11:37 [INFO] start execute: SELECT GUBUN, YEAR, '' MONTH, SNAME NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG, SUM(XH) XH, SUM(XI) XI, SUM(XJ) XJ     
                    , SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, SUM(XO) XO, SUM(XP) XP, SUM(XQ) XQ, SUM(XR) XR, SUM(XS) XS, SUM(XT) XT, SUM(XU) XU, SUM(XV) XV, SUM(XW) XW, SUM(XX) XX
                    , SUM(XY) XY, SUM(XZ) XZ, SUM(XAA) XAA, IDX
                FROM (SELECT DISTINCT A.GUBUN, A.YEAR, A.MONTH, SNAME, A.XA*B.XA XA, A.XB*B.XB XB, A.XC*B.XC XC
                , A.XD*B.XD XD, A.XE*B.XE XE, A.XF*B.XF XF, A.XG*B.XG XG, A.XH*B.XH XH, A.XI*B.XI XI
                , A.XJ*B.XJ XJ, A.XK*B.XK XK, A.XL*B.XL XL, A.XM*B.XM XM, A.XN*B.XN XN, A.XO*B.XO XO
                , A.XP*B.XP XP, A.XQ*B.XQ XQ, A.XR*B.XR XR, A.XS*B.XS XS, A.XT*B.XT XT, A.XU*B.XU XU
                , A.XV*B.XV XV, A.XW*B.XW XW, A.XX*B.XX XX, A.XY*B.XY XY, A.XZ*B.XZ XZ, A.XAA*B.XAA XAA, X.IDX
                    FROM (SELECT SCODE, SNAME, IDX FROM PLAN_SUB_MATERIAL_CODE WHERE YEAR = :year) X
                    , (SELECT * FROM PLAN_SUB_MATERIAL WHERE GUBUN = '1') A
                    , (SELECT * FROM PLAN_SUB_MATERIAL WHERE GUBUN = '2') B
                    WHERE X.SNAME = A.NAME(+)
                    AND X.SNAME = B.NAME(+)
                    AND A.YEAR = B.YEAR
                    AND A.MONTH = B.MONTH
                    AND A.NAME = B.NAME
                    AND A.YEAR = :year)
                GROUP BY GUBUN, YEAR, SNAME, IDX    
                ORDER BY YEAR, MONTH, IDX
2025-03-21 10:11:39 [INFO] Requested URL : /api/submaterialt/?year=2025&gubun=1
2025-03-21 10:11:39 [INFO] x-api-key : YP
2025-03-21 10:11:40 [INFO] start execute: SELECT GUBUN, YEAR, '' MONTH, SNAME NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG, SUM(XH) XH, SUM(XI) XI, SUM(XJ) XJ     
                    , SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, SUM(XO) XO, SUM(XP) XP, SUM(XQ) XQ, SUM(XR) XR, SUM(XS) XS, SUM(XT) XT, SUM(XU) XU, SUM(XV) XV, SUM(XW) XW, SUM(XX) XX
                    , SUM(XY) XY, SUM(XZ) XZ, SUM(XAA) XAA, IDX
                    FROM (SELECT DISTINCT X.*, A.*
                        FROM (SELECT SCODE, SNAME, IDX FROM PLAN_SUB_MATERIAL_CODE WHERE YEAR = :year) X
                        LEFT JOIN (SELECT * FROM PLAN_SUB_MATERIAL WHERE YEAR = :year AND GUBUN = :gubun) A
                        ON X.SNAME = A.NAME
                        )
                    GROUP BY GUBUN, YEAR, SNAME, IDX    
                    ORDER BY YEAR, MONTH, IDX
2025-03-21 10:11:42 [INFO] Requested URL : /api/repairexpensest/?year=2025&gubun=0
2025-03-21 10:11:42 [INFO] x-api-key : YP
2025-03-21 10:11:43 [INFO] start execute: SELECT GUBUN, YEAR, '' MONTH, SNAME NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG, SUM(XH) XH, SUM(XI) XI, SUM(XJ) XJ     
                    , SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, SUM(XO) XO, SUM(XP) XP, SUM(XQ) XQ, SUM(XR) XR, SUM(XS) XS, SUM(XT) XT, SUM(XU) XU, SUM(XV) XV, SUM(XW) XW, SUM(XX) XX
                    , SUM(XY) XY, SUM(XZ) XZ, SUM(XAA) XAA, IDX
                FROM (SELECT DISTINCT A.GUBUN, A.YEAR, A.MONTH, X.SNAME, A.XA*B.XA*C.VALUE XA, A.XB*B.XB*C.VALUE XB, A.XC*B.XC*C.VALUE XC
                , A.XD*B.XD*C.VALUE XD, A.XE*B.XE*C.VALUE XE, A.XF*B.XF*C.VALUE XF, A.XG*B.XG*C.VALUE XG, A.XH*B.XH*C.VALUE XH, A.XI*B.XI*C.VALUE XI
                , A.XJ*B.XJ*C.VALUE XJ, A.XK*B.XK*C.VALUE XK, A.XL*B.XL*C.VALUE XL, A.XM*B.XM*C.VALUE XM, A.XN*B.XN*C.VALUE XN, A.XO*B.XO*C.VALUE XO
                , A.XP*B.XP*C.VALUE XP, A.XQ*B.XQ*C.VALUE XQ, A.XR*B.XR*C.VALUE XR, A.XS*B.XS*C.VALUE XS, A.XT*B.XT*C.VALUE XT, A.XU*B.XU*C.VALUE XU
                , A.XV*B.XV*C.VALUE XV, A.XW*B.XW*C.VALUE XW, A.XX*B.XX*C.VALUE XX, A.XY*B.XY*C.VALUE XY, A.XZ*B.XZ*C.VALUE XZ, A.XAA*B.XAA*C.VALUE XAA, X.IDX
                    FROM (SELECT SCODE, SNAME, IDX FROM PLAN_REPAIR_EXPENSES_CODE WHERE YEAR = :year) X
                    , (SELECT * FROM PLAN_REPAIR_EXPENSES WHERE GUBUN = '1') A
                    , (SELECT * FROM PLAN_REPAIR_EXPENSES WHERE GUBUN = '2') B
                    , (SELECT * FROM PLAN_REPAIR_EXPENSES_MANUAL WHERE YEAR = :year) C
                    WHERE X.SNAME = A.NAME(+)
                    AND X.SNAME = B.NAME(+)
                    AND A.YEAR = B.YEAR
                    AND A.MONTH = B.MONTH
                    AND A.NAME = B.NAME
                    AND X.SNAME = C.SNAME(+)
                    AND A.YEAR = :year)
                GROUP BY GUBUN, YEAR, SNAME, IDX    
                ORDER BY YEAR, MONTH, IDX
2025-03-21 10:11:45 [INFO] Requested URL : /api/depreciationt/?year=2025&gubun=0
2025-03-21 10:11:45 [INFO] x-api-key : YP
2025-03-21 10:11:45 [INFO] start execute: SELECT GUBUN, YEAR, '' MONTH, SNAME NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG, SUM(XH) XH, SUM(XI) XI, SUM(XJ) XJ     
                    , SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, SUM(XO) XO, SUM(XP) XP, SUM(XQ) XQ, SUM(XR) XR, SUM(XS) XS, SUM(XT) XT, SUM(XU) XU, SUM(XV) XV, SUM(XW) XW, SUM(XX) XX
                    , SUM(XY) XY, SUM(XZ) XZ, SUM(XAA) XAA, IDX
                FROM (SELECT DISTINCT A.GUBUN, A.YEAR, A.MONTH, SNAME, A.XA*B.XA XA, A.XB*B.XB XB, A.XC*B.XC XC
                , A.XD*B.XD XD, A.XE*B.XE XE, A.XF*B.XF XF, A.XG*B.XG XG, A.XH*B.XH XH, A.XI*B.XI XI
                , A.XJ*B.XJ XJ, A.XK*B.XK XK, A.XL*B.XL XL, A.XM*B.XM XM, A.XN*B.XN XN, A.XO*B.XO XO
                , A.XP*B.XP XP, A.XQ*B.XQ XQ, A.XR*B.XR XR, A.XS*B.XS XS, A.XT*B.XT XT, A.XU*B.XU XU
                , A.XV*B.XV XV, A.XW*B.XW XW, A.XX*B.XX XX, A.XY*B.XY XY, A.XZ*B.XZ XZ, A.XAA*B.XAA XAA, X.IDX
                    FROM (SELECT SCODE, SNAME, IDX FROM PLAN_DEPRECIATION_CODE WHERE YEAR = :year) X
                    , (SELECT * FROM PLAN_DEPRECIATION WHERE GUBUN = '1') A
                    , (SELECT * FROM PLAN_DEPRECIATION WHERE GUBUN = '2') B
                    WHERE X.SNAME = A.NAME(+)
                    AND X.SNAME = B.NAME(+)
                    AND A.YEAR = B.YEAR
                    AND A.MONTH = B.MONTH
                    AND A.NAME = B.NAME
                    AND A.YEAR = :year)
                GROUP BY GUBUN, YEAR, SNAME, IDX    
                ORDER BY YEAR, MONTH, IDX
2025-03-21 10:11:52 [INFO] Requested URL : /api/distributiontable/?year=2025
2025-03-21 10:11:52 [INFO] x-api-key : YP
2025-03-21 10:11:52 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:11:52 [INFO] start execute: SELECT X.SCODE, X.SNAME, X.IDX
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC001', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC001', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC001', VALUE, 0))) OVER () * 100) AS DTDC001_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC001', VALUE, 0)) AS DTDC001
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC002', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC002', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC002', VALUE, 0))) OVER () * 100) AS DTDC002_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC002', VALUE, 0)) AS DTDC002
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC003', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC003', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC003', VALUE, 0))) OVER () * 100) AS DTDC003_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC003', VALUE, 0)) AS DTDC003
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC004', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC004', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC004', VALUE, 0))) OVER () * 100) AS DTDC004_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC004', VALUE, 0)) AS DTDC004
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC005', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC005', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC005', VALUE, 0))) OVER () * 100) AS DTDC005_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC005', VALUE, 0)) AS DTDC005
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC006', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC006', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC006', VALUE, 0))) OVER () * 100) AS DTDC006_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC006', VALUE, 0)) AS DTDC006
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC007', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC007', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC007', VALUE, 0))) OVER () * 100) AS DTDC007_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC007', VALUE, 0)) AS DTDC007
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC008', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC008', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC008', VALUE, 0))) OVER () * 100) AS DTDC008_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC008', VALUE, 0)) AS DTDC008
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC009', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC009', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC009', VALUE, 0))) OVER () * 100) AS DTDC009_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC009', VALUE, 0)) AS DTDC009
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC010', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC010', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC010', VALUE, 0))) OVER () * 100) AS DTDC010_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC010', VALUE, 0)) AS DTDC010
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC011', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC011', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC011', VALUE, 0))) OVER () * 100) AS DTDC011_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC011', VALUE, 0)) AS DTDC011
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC012', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC012', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC012', VALUE, 0))) OVER () * 100) AS DTDC012_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC012', VALUE, 0)) AS DTDC012
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC013', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC013', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC013', VALUE, 0))) OVER () * 100) AS DTDC013_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC013', VALUE, 0)) AS DTDC013
                , DECODE(SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC014', VALUE, 0))) OVER (), 0, 0, SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC014', VALUE, 0)) / SUM(SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC014', VALUE, 0))) OVER () * 100) AS DTDC014_PER
                , SUM(DECODE(A.SCODE_2, NULL, 0, 'DTDC014', VALUE, 0)) AS DTDC014
                FROM PLAN_DISTRIBUTION_TABLE_CODE X, PLAN_DISTRIBUTION_TABLE A 
                WHERE X.YEAR = A.YEAR(+)
                AND X.SCODE = A.SCODE_1(+)
                AND X.YEAR = :year
                GROUP BY X.SCODE, X.SNAME, X.IDX
                ORDER BY X.IDX
2025-03-21 10:11:57 [INFO] Requested URL : /api/zincauto/?year=2025
2025-03-21 10:11:57 [INFO] x-api-key : YP
2025-03-21 10:11:57 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:11:57 [INFO] start execute: SELECT YEAR, LNAME, MNAME, SNAME
                , MONTH_01, MONTH_02, MONTH_03, MONTH_1
                , MONTH_04, MONTH_05, MONTH_06, MONTH_2 
                , MONTH_07, MONTH_08, MONTH_09, MONTH_3 
                , MONTH_10, MONTH_11, MONTH_12, MONTH_4
                , MONTH_0, IDX, GUBUN 
                FROM PLAN_ZINC_CONCENTRATE_DTL
                WHERE YEAR = :year
                ORDER BY IDX, GUBUN
2025-03-21 10:12:10 [INFO] Requested URL : /api/submaterialaia/?year=2025&gubun=0
2025-03-21 10:12:10 [INFO] x-api-key : YP
2025-03-21 10:12:11 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:12:11 [INFO] start execute: SELECT A.YEAR, '전체' MONTH, A.NAME, SUM(XA) XA, SUM(XB) XB, SUM(XC) XC, SUM(XD) XD, SUM(XE) XE, SUM(XF) XF, SUM(XG) XG
                , SUM(XH) XH, SUM(ZN) ZN, SUM(XI) XI, SUM(XJ) XJ, SUM(XK) XK, SUM(XL) XL, SUM(XM) XM, SUM(XN) XN, B.IDX NUM
                FROM PLAN_SUB_MATERIAL_AIA A, PLAN_SUB_MATERIAL_CODE B
                WHERE A.YEAR = :year
                AND A.NAME = B.SNAME(+)
                AND A.YEAR = B.YEAR(+)
                GROUP BY A.YEAR, A.NAME, B.IDX
                ORDER BY B.IDX
2025-03-21 10:15:13 [INFO] Requested URL : /api/zincconcentratemanual/?year=2025
2025-03-21 10:15:13 [INFO] x-api-key : YP
2025-03-21 10:15:13 [INFO] start execute: SELECT YEAR, GUBUN, MEASURE, XA, XB, XC
                  FROM PLAN_ZINC_CONCENTRATE_MANUAL
                  WHERE YEAR = :year
                  ORDER BY IDX
2025-03-21 10:15:13 [INFO] Requested URL : /api/zincconcentrateunitcost/?year=2025
2025-03-21 10:15:13 [INFO] x-api-key : YP
2025-03-21 10:15:13 [INFO] start execute: SELECT YEAR, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06
                , MONTH_07, MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12
                , COST_01, COST_02, COST_03, COST_04, COST_05, COST_06
                , COST_07, COST_08, COST_09, COST_10, COST_11, COST_12
                FROM PLAN_ZINC_CONCENTRATE_UNIT_COST A
                WHERE YEAR = :year
2025-03-21 10:31:52 [INFO] Requested URL : /api/zincauto/?year=2025
2025-03-21 10:31:52 [INFO] x-api-key : YP
2025-03-21 10:31:52 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:31:52 [INFO] start execute: SELECT YEAR, LNAME, MNAME, SNAME
                , MONTH_01, MONTH_02, MONTH_03, MONTH_1
                , MONTH_04, MONTH_05, MONTH_06, MONTH_2 
                , MONTH_07, MONTH_08, MONTH_09, MONTH_3 
                , MONTH_10, MONTH_11, MONTH_12, MONTH_4
                , MONTH_0, IDX, GUBUN 
                FROM PLAN_ZINC_CONCENTRATE_DTL
                WHERE YEAR = :year
                ORDER BY IDX, GUBUN
2025-03-21 10:36:34 [INFO] Requested URL : /api/agbyproducts/?year=2025
2025-03-21 10:36:34 [INFO] x-api-key : YP
2025-03-21 10:36:34 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:36:35 [INFO] start execute: SELECT YEAR, 'Pb Residue Calculation' GUBUN, GUBUN1, GUBUN2, MEASURE, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07
                , MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12, USE_YN, IDX
                FROM PLAN_REF_INDICATOR
                WHERE YEAR = :year 
                AND GUBUN1 IN ('LME', 'T/C')
                UNION ALL
                SELECT A.YEAR, LNAME, MNAME, SNAME, A.MEASURE, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07
                , MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12, USE_YN, TO_NUMBER(A.IDX||'00')   
                FROM PLAN_AG_BY_PRODUCTS_CODE A, PLAN_AG_BY_PRODUCTS B
                WHERE A.LNAME = B.GUBUN(+)
                AND A.MNAME = B.GUBUN1(+)
                AND A.SNAME = B.GUBUN2(+)
                AND A.YEAR = B.YEAR(+)
                AND A.YEAR = :year
                ORDER BY IDX
2025-03-21 10:36:35 [INFO] Requested URL : /api/agbyproducts/?year=2025
2025-03-21 10:36:35 [INFO] x-api-key : YP
2025-03-21 10:36:35 [INFO] req data : {
  "returncode": "0000"
}
2025-03-21 10:36:35 [INFO] start execute: SELECT YEAR, 'Pb Residue Calculation' GUBUN, GUBUN1, GUBUN2, MEASURE, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07
                , MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12, USE_YN, IDX
                FROM PLAN_REF_INDICATOR
                WHERE YEAR = :year 
                AND GUBUN1 IN ('LME', 'T/C')
                UNION ALL
                SELECT A.YEAR, LNAME, MNAME, SNAME, A.MEASURE, MONTH_01, MONTH_02, MONTH_03, MONTH_04, MONTH_05, MONTH_06, MONTH_07
                , MONTH_08, MONTH_09, MONTH_10, MONTH_11, MONTH_12, USE_YN, TO_NUMBER(A.IDX||'00')   
                FROM PLAN_AG_BY_PRODUCTS_CODE A, PLAN_AG_BY_PRODUCTS B
                WHERE A.LNAME = B.GUBUN(+)
                AND A.MNAME = B.GUBUN1(+)
                AND A.SNAME = B.GUBUN2(+)
                AND A.YEAR = B.YEAR(+)
                AND A.YEAR = :year
                ORDER BY IDX
